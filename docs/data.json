{
    "project": {
        "name": "De Persgroep Publishing",
        "description": "Communication layer",
        "version": "0.1"
    },
    "files": {
        "src/classes/cycle.js": {
            "name": "src/classes/cycle.js",
            "modules": {},
            "classes": {
                "Cycle": 1
            },
            "fors": {
                "Cycle": 1
            },
            "namespaces": {}
        },
        "src/classes/dialog.js": {
            "name": "src/classes/dialog.js",
            "modules": {},
            "classes": {
                "Dialog": 1
            },
            "fors": {
                "Dialog": 1
            },
            "namespaces": {}
        },
        "src/classes/tabs.js": {
            "name": "src/classes/tabs.js",
            "modules": {},
            "classes": {
                "Tabs": 1
            },
            "fors": {
                "Tabs": 1
            },
            "namespaces": {}
        },
        "src/classes/toggle.js": {
            "name": "src/classes/toggle.js",
            "modules": {},
            "classes": {
                "Toggle": 1
            },
            "fors": {
                "Toggle": 1
            },
            "namespaces": {}
        },
        "src/classes/validate.js": {
            "name": "src/classes/validate.js",
            "modules": {},
            "classes": {
                "Validate": 1
            },
            "fors": {
                "Validate": 1
            },
            "namespaces": {}
        },
        "src/persgroep.js": {
            "name": "src/persgroep.js",
            "modules": {
                "Persgroep": 1
            },
            "classes": {},
            "fors": {
                "$": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "Persgroep": {
            "name": "Persgroep",
            "submodules": {},
            "classes": {
                "Cycle": 1,
                "Dialog": 1,
                "Tabs": 1,
                "Toggle": 1,
                "Validate": 1,
                "$": 1
            },
            "fors": {
                "$": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/classes/validate.js",
            "line": 2,
            "description": "'De persgroep' library can be used just like jQuery but\n our $ function is a layer to communicate with  minimalistic\n 3rd party libraries:\n\n [Arbiter](http://arbiterjs.com)\n  -------------------------------------\n  A light-weight, library-agnostic javascript implementation of\n  the pub/sub pattern\n [Bonzo](https://github.com/ded/bonzo)\n  -------------------------------------\n  A library agnostic extensible DOM utility. Nothing else.\n [Qwuery](https://github.com/ded/qwery)\n  -------------------------------------\n  Qwery is a modern selector engine built on top of querySelectorAll\n  giving you practical utility.\n [Bean](https://github.com/fat/bean)\n  -------------------------------------\n  A small, fast, cross-platform, framework-agnostic event manager\n  designed for desktop, mobile, and touch-based browsers.\n [Reqwest](https://github.com/ded/reqwest)\n  -------------------------------------\n  Ajax all over again! Includes support for xmlHttpRequest, JSONP,\n  CORS and CommonJS Promises A."
        }
    },
    "classes": {
        "Cycle": {
            "name": "Cycle",
            "shortname": "Cycle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Persgroep",
            "file": "src/classes/cycle.js",
            "line": 2,
            "description": "Sometimes stuff has to cycle. Carousels, slideshows, etc...\n\tLook no further 'cause this piece of code will do it all",
            "is_constructor": 1,
            "itemtype": "property",
            "type": "Bonzo",
            "example": [
                "\n\tvar slideshow = $(obj).data('cycle',\n\t\tnew Cycle({\n\t\t\tcycle: $(obj),\n\t\t\tcontainer: container,\n\t\t\tslides: items,\n\t\t\tnavigation: (nav.length ? nav : false),\n\t\t\tbullets: (bullets.length ? bullets : false),\n\t\t\tloop: true,\n\t\t\tanimation: animation,\n\t\t\tautoplay: autoplay,\n\t\t\ttimer: timer,\n\t\t\tonSlideChange: function(args){\n \t\t\t\t// callback function\n\t\t\t}\n\t\t})\n\t);\n"
            ]
        },
        "Dialog": {
            "name": "Dialog",
            "shortname": "Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Persgroep",
            "file": "src/classes/dialog.js",
            "line": 2,
            "description": "Modals you say? Lightboxes? What's in a name. This thing uses\n\tthe WAI ARIA specced items to create modals",
            "is_constructor": 1,
            "requires": [
                "Toggle"
            ],
            "itemtype": "property",
            "type": "Bonzo",
            "example": [
                "\n\tnew Dialog({\n\t\ttrigger: $('.modal-trigger'),\n\t\tcloser: '.close'\n\t});\n\n"
            ]
        },
        "Tabs": {
            "name": "Tabs",
            "shortname": "Tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Persgroep",
            "file": "src/classes/tabs.js",
            "line": 2,
            "description": "Our tabs module is used to have multiple toggle items as\n\ttabbed behaviour items",
            "is_constructor": 1,
            "requires": [
                "Toggle"
            ],
            "itemtype": "property",
            "type": "Bonzo",
            "example": [
                "\n\tnew Tabs({\n\t\ttabs: $('.tab-block'),\n\t\tonTabChange: function(args){\n \t\t\t// do stuff\n\t\t}\n\t});\n\n"
            ]
        },
        "Toggle": {
            "name": "Toggle",
            "shortname": "Toggle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Persgroep",
            "file": "src/classes/toggle.js",
            "line": 2,
            "description": "Our toggle module is used to toggle stuff (classes, whatever)\n\tEach toggle consists of a trigger and a object to toggle.",
            "is_constructor": 1,
            "itemtype": "property",
            "type": "Bonzo",
            "example": [
                "\n\tnew Toggle({\n\t\ttoggle: $('.toggle'),\n\t\ttrigger: $('.trigger'),\n\t\tonshow: function(args){\n\t\t\t// add a class\n\t\t},\n\t\tonhide: function(args){\n\t\t\t// remove a class\n\t\t}\n\t});\n\n"
            ]
        },
        "Validate": {
            "name": "Validate",
            "shortname": "Validate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Persgroep",
            "file": "src/classes/validate.js",
            "line": 2,
            "description": "Validating forms like a boss! On submit it automatically\n\tvalidates the form with",
            "is_constructor": 1,
            "itemtype": "property",
            "type": "Bonzo",
            "example": [
                "\n\tnew Validate({\n\t\tfrm: $('.form-to-validate'),\n\t\tnoFormevents: false,\n\t});\n\n"
            ]
        },
        "$": {
            "name": "$",
            "shortname": "$",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Persgroep",
            "namespace": ""
        }
    },
    "classitems": [
        {
            "file": "src/classes/cycle.js",
            "line": 184,
            "itemtype": "method",
            "name": "show",
            "description": "Show a specific slide",
            "params": [
                {
                    "name": "slidenumber",
                    "description": "the index of the slide to show",
                    "type": "Integer"
                },
                {
                    "name": "direction",
                    "description": "the direction (left / right) to slide if animated",
                    "type": "String",
                    "optional": true
                }
            ],
            "example": [
                "\n\tslideshow.show(slideNumber, 'left');\n"
            ],
            "class": "Cycle"
        },
        {
            "file": "src/classes/cycle.js",
            "line": 256,
            "itemtype": "method",
            "name": "showNext",
            "description": "Shorthand to show the next slide",
            "example": [
                "\n\tslideshow.showNext();\n"
            ],
            "class": "Cycle"
        },
        {
            "file": "src/classes/cycle.js",
            "line": 288,
            "itemtype": "method",
            "name": "showPrevious",
            "description": "Shorthand to show the previous slide",
            "example": [
                "\n\tslideshow.showPrevious();\n"
            ],
            "class": "Cycle"
        },
        {
            "file": "src/classes/cycle.js",
            "line": 316,
            "itemtype": "method",
            "name": "startAutoplay",
            "description": "start the autoplay",
            "example": [
                "\n\tslideshow.startAutoplay();\n"
            ],
            "class": "Cycle"
        },
        {
            "file": "src/classes/cycle.js",
            "line": 351,
            "itemtype": "method",
            "name": "stopAutoplay",
            "description": "stop the autoplay",
            "example": [
                "\n\tslideshow.stopAutoplay();\n"
            ],
            "class": "Cycle"
        },
        {
            "file": "src/classes/dialog.js",
            "line": 81,
            "itemtype": "method",
            "name": "show",
            "description": "calls the show callback function",
            "example": [
                "\n\tvar obj = new Dialog({\n\ttrigger: $('.modal-trigger'),\n\tcloser: '.close'\n\t});\n\tobj.show();\n"
            ],
            "class": "Dialog"
        },
        {
            "file": "src/classes/dialog.js",
            "line": 115,
            "itemtype": "method",
            "name": "hide",
            "description": "calls the hide callback function",
            "example": [
                "\n\tvar obj = new Dialog({\n\ttrigger: $('.modal-trigger'),\n\tcloser: '.close'\n\t});\n\tobj.hide();\n"
            ],
            "class": "Dialog"
        },
        {
            "file": "src/classes/tabs.js",
            "line": 67,
            "itemtype": "method",
            "name": "show",
            "description": "calls the show callback function",
            "example": [
                "\n\tvar obj = new Tabs({\n\t\ttabs: $('.tab-block'),\n\t\tonTabChange: function(args){ // do stuff; },\n\t});\n\tobj.show();\n"
            ],
            "class": "Tabs"
        },
        {
            "file": "src/classes/tabs.js",
            "line": 106,
            "itemtype": "method",
            "name": "hide",
            "description": "calls the hide callback function",
            "example": [
                "\n\tvar obj = new Tabs({\n\t\ttabs: $('.tab-block'),\n\t\tonTabChange: function(args){ // do stuff; },\n\t});\n\tobj.hide();\n"
            ],
            "class": "Tabs"
        },
        {
            "file": "src/classes/tabs.js",
            "line": 139,
            "itemtype": "method",
            "name": "destroy",
            "description": "destroys the tabs instance",
            "example": [
                "\n\tvar obj = new Tabs({\n\t\ttabs: $('.tab-block'),\n\t\tonTabChange: function(args){ // do stuff; },\n\t});\n\tobj.destroy();\n"
            ],
            "class": "Tabs"
        },
        {
            "file": "src/classes/toggle.js",
            "line": 80,
            "itemtype": "method",
            "name": "toggle",
            "description": "fires the show or hide function",
            "example": [
                "\n\tvar obj = new Toggle({\n\t\ttoggle: $('.toggle'),\n\t\ttrigger: $('.trigger'),\n\t\tonshow: function(args){ // add a class; },\n\t\tonhide: function(args){ // remove a class}\n\t});\n\tobj.toggle();\n"
            ],
            "class": "Toggle"
        },
        {
            "file": "src/classes/toggle.js",
            "line": 118,
            "itemtype": "method",
            "name": "show",
            "description": "calls the show callback function",
            "example": [
                "\n\tvar obj = new Toggle({\n\t\ttoggle: $('.toggle'),\n\t\ttrigger: $('.trigger'),\n\t\tonshow: function(args){ // add a class; },\n\t\tonhide: function(args){ // remove a class}\n\t});\n\tobj.show();\n"
            ],
            "class": "Toggle"
        },
        {
            "file": "src/classes/toggle.js",
            "line": 169,
            "itemtype": "method",
            "name": "hide",
            "description": "calls the hide callback function",
            "example": [
                "\n\tvar obj = new Toggle({\n\t\ttoggle: $('.toggle'),\n\t\ttrigger: $('.trigger'),\n\t\tonshow: function(args){ // add a class; },\n\t\tonhide: function(args){ // remove a class}\n\t});\n\tobj.hide();\n"
            ],
            "class": "Toggle"
        },
        {
            "file": "src/classes/toggle.js",
            "line": 208,
            "itemtype": "method",
            "name": "destroy",
            "description": "destroys the toggle instance",
            "example": [
                "\n\tvar obj = new Toggle({\n\t\ttoggle: $('.toggle'),\n\t\ttrigger: $('.trigger'),\n\t\tonshow: function(args){ // add a class; },\n\t\tonhide: function(args){ // remove a class}\n\t});\n\tobj.destroy();\n"
            ],
            "class": "Toggle"
        },
        {
            "file": "src/classes/validate.js",
            "line": 66,
            "itemtype": "method",
            "name": "checkValidation",
            "description": "check the form validation",
            "example": [
                "\n\tvar theForm = new Validate({\n\tfrm: $('.form-to-validate'),\n\t});\n\ttheForm.checkValidation();\n\n"
            ],
            "class": "Validate"
        },
        {
            "file": "src/classes/validate.js",
            "line": 200,
            "itemtype": "method",
            "name": "checkValue",
            "description": "check if an input / textarea value is valid",
            "return": {
                "description": "validation",
                "type": "Boolean"
            },
            "example": [
                "\n\tvar theForm = new Validate({\n\tfrm: $('.form-to-validate'),\n\t}),\n\tinp = document.getElementById('inputName');\n\ttheForm.checkValue(inp);\n\n"
            ],
            "class": "Validate"
        },
        {
            "file": "src/classes/validate.js",
            "line": 300,
            "itemtype": "method",
            "name": "removeAllErrors",
            "description": "Remove all errors",
            "example": [
                "\n\tvar theForm = new Validate({\n\tfrm: $('.form-to-validate'),\n\t});\n\ttheForm.removeAllErrors();\n\n"
            ],
            "class": "Validate"
        },
        {
            "file": "src/persgroep.js",
            "line": 46,
            "description": "Return a collection of matched elements either found in the DOM based\n  on passed argument(s) or created by passing an HTML string.",
            "params": [
                {
                    "name": "selector",
                    "description": "A string containing a selector expression",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "A DOM Element, Document, or Bonzo object to use as context",
                    "type": "Element,Bonzo",
                    "optional": true
                }
            ],
            "return": {
                "description": "Bonzo An array of elements found matching the selector string",
                "type": "Bonzo"
            },
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 76,
            "itemtype": "method",
            "name": "on",
            "chainable": 1,
            "description": "lets you attach event listeners to both elements and objects.",
            "params": [
                {
                    "name": "eventType",
                    "description": "An event (or multiple events, space separated) to listen to",
                    "type": "String"
                },
                {
                    "name": "selector",
                    "description": "A CC DOM Element selector string to bind the listener to child elements matching the selector",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "handler",
                    "description": "The callback function",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "Additional arguments to pass to the callback function",
                    "type": "Arguments",
                    "optional": true
                }
            ],
            "example": [
                "\n\t$('.selector').on('click', function(){\n\t\t// do something\n\t});\n\n\t$('.selector').on('click.action', function(e){\n\t\te.preventDefault();\n\t\t// do other stuff\n\t});\n"
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 111,
            "itemtype": "method",
            "name": "one",
            "chainable": 1,
            "description": "one() is an alias for bean.on() except that the handler will only be executed once\n\tand then removed for the event type(s).",
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 130,
            "itemtype": "method",
            "name": "off",
            "chainable": 1,
            "description": "off() is how you get rid of handlers once you no longer want them active.\n\tIt's also a good idea to call off on elements before you remove them from your DOM;\n\tthis gives Bean a chance to clean up some things and prevents memory leaks.",
            "params": [
                {
                    "name": "eventType",
                    "description": "An event (or multiple events, space separated) to listen to",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "the specific callback function to remove",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 153,
            "itemtype": "method",
            "name": "fire",
            "chainable": 1,
            "description": "fire() gives you the ability to trigger events.",
            "params": [
                {
                    "name": "eventType",
                    "description": "An event (or multiple events, space separated) to listen to",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Additional arguments to pass to the callback function",
                    "type": "Arguments",
                    "optional": true
                }
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 175,
            "itemtype": "method",
            "name": "find",
            "chainable": 1,
            "description": "Get the descendants of each element in the current set of matched elements, filtered\n\tby a selector, Bonzo object, or element.",
            "params": [
                {
                    "name": "Selector",
                    "description": "A string containing a selector expression to match elements against.",
                    "type": "String"
                }
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 199,
            "itemtype": "method",
            "name": "parents",
            "chainable": 1,
            "description": "Get the ancestors of each element in the current set of matched elements, optionally\n\tfiltered by a selector.",
            "params": [
                {
                    "name": "Selector",
                    "description": "A string containing a selector expression to match elements against.",
                    "type": "String"
                }
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 233,
            "itemtype": "method",
            "name": "children",
            "chainable": 1,
            "description": "Get the children of each element in the set of matched elements, optionally\n\tfiltered by a selector.",
            "params": [
                {
                    "name": "Selector",
                    "description": "A string containing a selector expression to match elements against.",
                    "type": "String"
                }
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 281,
            "itemtype": "method",
            "name": "closest",
            "chainable": 1,
            "description": "For each element in the set, get the first element that matches the selector by testing the\n  element itself and traversing up through its ancestors in the DOM tree.",
            "params": [
                {
                    "name": "Selector",
                    "description": "A string containing a selector expression to match elements against.",
                    "type": "String"
                }
            ],
            "class": "$",
            "module": "Persgroep"
        },
        {
            "file": "src/persgroep.js",
            "line": 429,
            "description": "$.browser('ie6') to check for current client bowser.",
            "params": [
                {
                    "name": "browser",
                    "description": "Can be [ie | ie6 | ie7 | ie8 | ie9 | lte7 | lte8 | lte9] or non of them.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if browser matches current client browser",
                "type": "Boolean"
            },
            "class": "$",
            "module": "Persgroep"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nReturn a collection of matched elements either found in the DOM based\n  on passed argument(s) or created by passing an HTML string.",
            "line": " src/persgroep.js:46"
        },
        {
            "message": "Missing item type\n$.browser('ie6') to check for current client bowser.",
            "line": " src/persgroep.js:429"
        }
    ]
}